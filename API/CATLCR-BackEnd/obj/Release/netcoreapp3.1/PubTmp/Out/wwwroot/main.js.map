{
  "version": 3,
  "sources": [ "./src/app/shared/setting-layout/setting-layout.component.ts", "./src/app/shared/setting-layout/setting-layout.component.html", "./src/app/shared/Util/criteria-date.ts", "./src/app/reporting/reporting.module.ts", "./src/app/shared/layout/layout.component.ts", "./src/app/shared/layout/layout.component.html", "./src/app/shared/models/criteria.model.ts", "./src/app/shared/pipes/boolean.pipe.ts", "./src/app/shared/Services/criteria-control.service.ts", "./src/app/auth/auth-routing.module.ts", "./src/app/setting/category-configuration/category-configuration.component.ts", "./src/app/setting/category-configuration/category-configuration.component.html", "./src/app/shared/page404/page404.component.ts", "./src/app/shared/page404/page404.component.html", "./src/environments/environment.ts", "./src/app/shared/Pipes/report-status.pipe.ts", "./src/app/shared/criteria-config/criteria-config.component.ts", "./src/app/shared/criteria-config/criteria-config.component.html", "./src/app/shared/Services/report.service.ts", "./src/app/shared/Services/auth.service.ts", "./src/app/shared/criteria/criteria.component.ts", "./src/app/shared/criteria/criteria.component.html", "./src/app/shared/Services/referential.service.ts", "./src/app/shared/guards/report.guard.ts", "./src/app/setting/global-setting/global-setting.component.ts", "./src/app/setting/global-setting/global-setting.component.html", "./src/app/setting/report-configuration/report-configuration.component.ts", "./src/app/setting/report-configuration/report-configuration.component.html", "./src/app/reporting/report/report.component.ts", "./src/app/reporting/report/report.component.html", "./src/app/shared/shared.module.ts", "./node_modules/moment/locale sync ^\\.\\/.*$", "./src/app/app.component.ts", "./src/app/app.component.html", "./src/app/shared/Util/interceptor.ts", "./src/app/setting/setting-routing.module.ts", "./src/app/shared/Util/criteria-base.ts", "./src/app/shared/modals/exit-dirty/exit-dirty.component.ts", "./src/app/shared/modals/exit-dirty/exit-dirty.component.html", "./src/app/shared/models/report.model.ts", "./src/app/auth/auth.module.ts", "./src/app/app.module.ts", "./src/app/reporting/reporting-routing.module.ts", "./src/app/shared/Services/http-helper.service.ts", "./src/app/shared/Services/criteria.service.ts", "./src/app/auth/login/login.component.ts", "./src/app/auth/login/login.component.html", "./src/app/shared/Util/ErrorHandler.ts", "./src/app/shared/report-viewer/report-viewer.component.ts", "./src/app/shared/report-viewer/report-viewer.component.html", "./src/app/setting/setting.module.ts", "./src/app/shared/Pipes/moment.pipe.ts", "./src/app/shared/Util/storage.ts", "./src/app/shared/Util/criteria-dropdown.ts", "./src/app/auth/init-pass/init-pass.component.ts", "./src/app/auth/init-pass/init-pass.component.html", "./src/app/app-routing.module.ts", "./src/app/reporting/reports/reports.component.ts", "./src/app/reporting/reports/reports.component.html", "./src/main.ts", "./$_lazy_route_resource lazy namespace object" ],
  "names": [],
  "mappings": "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",
  "file": "main.js",
  "sourcesContent": [ "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../Services/auth.service';\nimport { getFromStorage } from '../Util/storage';\n\nconst _settings = [\n  //{url:'/GlobalConfiguration/', title:'Global configuration', active:false},\n  {url:'/ReportConfiguration/', title:'Report configuration', active:false},\n  //{url:'/CategoryConfiguration/', title:'Category configuration', active:false}\n]\n\n@Component({\n  selector: 'app-setting-layout',\n  templateUrl: './setting-layout.component.html',\n  styleUrls: ['./setting-layout.component.scss']\n})\nexport class SettingLayoutComponent implements OnInit {\n  settings:any=_settings;\n  user = getFromStorage('user');\n  constructor(private route:Router,private auth: AuthService) {\n   }\n\n   logout = () => {\n    this.auth.logout();\n  }\n  \n  ngOnInit(): void {\n    this.route.events.subscribe(() => {\n      let _url = this.route.url.substr(0, this.route.url.lastIndexOf('/') + 1);\n      this.settings.forEach(element => {\n        element.active = (element.url == _url);\n      });\n    });\n  }\n\n}\n", "<mat-toolbar color=\"primary\" class=\"header\">  \n    <span>KPI LC</span>\n    <span class=\"example-spacer\">\n    </span>\n    <button mat-flat-button type=\"button\" [routerLink]=\"['/reports']\">\n      <mat-icon>home</mat-icon>\n    </button>\n    <mat-divider vertical style=\"height:30px\"></mat-divider>\n    <button mat-flat-button type=\"button\" [matMenuTriggerFor]=\"menu\">\n      {{ user ? user.name : ''}}\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item (click)=\"logout();\"><mat-icon>power_settings_new</mat-icon> Logout</button>\n    </mat-menu>\n  </mat-toolbar>\n\n  <mat-toolbar class=\"subnav\">\n    <div fxFlex fxLayout fxHide.xs><!--fxLayoutAlign=\"end\"-->\n        <ul fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\n          <li *ngFor=\"let config of settings\">\n            <a  mat-button [routerLink]=\"config.url\" [class]=\"config.active ? 'active':''\">{{config.title}}</a>\n          </li>\n        </ul>\n    </div>\n  </mat-toolbar>\n  <mat-sidenav-container class=\"container\">\n    <mat-sidenav-content>\n          <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n  ", "import { CriteriaBase, option } from './criteria-base';\r\n\r\nexport class CriteriaDate extends CriteriaBase<string> {\r\n  controlType = 'date';\r\n}", "import { MatTableModule } from '@angular/material/table';\nimport { SharedModule } from './../shared/shared.module';\nimport { ReportsComponent } from './reports/reports.component';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReportingRoutingModule } from './reporting-routing.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NgMatSearchBarModule } from 'ng-mat-search-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { RouterModule } from '@angular/router';\nimport { ReportComponent } from './report/report.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@NgModule({\n  declarations: [\n    ReportComponent,\n    ReportsComponent,\n  ],\n  imports: [\n    RouterModule,\n    CommonModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatMenuModule,\n    MatToolbarModule,\n    NgMatSearchBarModule,\n    MatDividerModule,\n    MatTabsModule,\n    ReportingRoutingModule,\n    SharedModule,\n    MatCardModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ReportingModule { }\n", "import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AuthService } from '../Services/auth.service';\nimport { getFromStorage } from '../Util/storage';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n  notHome: boolean = true;\n  user = getFromStorage('user');\n  currentRoute: string;\n\n  constructor(private router: Router, private auth: AuthService){\n    this.notHome = (router.url.indexOf('/reports') === -1 || '/' !== router.url[router.url.length -1]);\n    }\n\n  ngOnInit(): void {\n  }\n\n  logout = () => {\n    this.auth.logout();\n  }\n\n}\n", "<mat-toolbar color=\"primary\" class=\"header\">  \n  <a href=\"http://frgnbwebr7.cat.groupecat.com/CATLCR/Configuration/Reports.aspx\" target=\"_self\"\n   mat-icon-button title=\"Return to the old application\" aria-roledescription=\"Return to the old application\">\n    <mat-icon>keyboard_return</mat-icon>\n  </a>\n  <span>KPI LC</span>\n  <span class=\"example-spacer\">\n  </span>\n  <!-- <mat-search-bar class=\"search\"></mat-search-bar>\n  <mat-divider  *ngIf=\"notHome\" vertical style=\"height:30px\"></mat-divider> -->\n  <button *ngIf=\"notHome\" mat-flat-button type=\"button\" [routerLink]=\"['/reports']\">\n    <mat-icon>home</mat-icon>\n  </button>\n  <mat-divider vertical style=\"height:30px\"></mat-divider>\n  <button mat-flat-button type=\"button\">\n    <mat-icon>language</mat-icon>\n  </button>\n  <mat-divider vertical style=\"height:30px\"></mat-divider>\n  <button *ngIf=\"user && user.isAdmin\" mat-flat-button type=\"button\" [routerLink]=\"['/ReportConfiguration']\">\n    <mat-icon>settings</mat-icon>\n  </button>\n  <mat-divider vertical style=\"height:30px\"></mat-divider>\n  <button mat-flat-button type=\"button\" [matMenuTriggerFor]=\"menu\">\n    {{ user ? user.name : ''}}\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"logout();\"><mat-icon>power_settings_new</mat-icon> Logout</button>\n  </mat-menu>\n</mat-toolbar>\n<mat-sidenav-container class=\"container\">\n  <mat-sidenav-content>\n        <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n", "\r\nimport { option } from '../Util/criteria-base';\r\n\r\nexport interface criteriaModel {\r\n    reportID: string;\r\n    dataType: string;\r\n    updatedOn: Date;\r\n    controlType: number;\r\n    hidden: boolean;\r\n    id: string;\r\n    label: string;\r\n    name: string;\r\n    timestamp: string;\r\n    defaultValue: string;\r\n    defaultKey: string;\r\n    referential: string;\r\n    multiple: boolean;\r\n    required: boolean;\r\n    order: number;\r\n    options: option[]\r\n}\r\n\r\nexport interface paramValue {\r\n    criteriaId : string;\r\n    value: string;\r\n    key: string;\r\n    scheduler:boolean;\r\n}\r\n\r\nexport const controlTypes =\r\n[\r\n    {value:1, text:'Date'},\r\n    {value:2, text:'Free text'},\r\n    {value:3, text:'List'}\r\n]", "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'booleanPipe'\n})\nexport class BooleanPipe implements PipeTransform {\n\n  transform(value: boolean): unknown {\n    return value? 'Yes' : 'No';\n  }\n\n}\n", "import { Injectable } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CriteriaBase } from '../Util/criteria-base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CriteriaControlService {\n\n  constructor(private fb: FormBuilder) { }\n\n  toFormGroup(criterias: CriteriaBase<string>[] ) {\n    const group: any = {};\n\n    criterias.forEach(crit => {\n      group[crit.key] = crit.required ? new FormControl(crit.value || '', Validators.required)\n                                              : new FormControl(crit.value || '');\n    });\n    return new FormGroup(group);\n  }\n}\n", "import { InitPassComponent } from './init-pass/init-pass.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', component:LoginComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'initpass', component: InitPassComponent},\n  { path: 'initpass/:code', component: InitPassComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n", "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-category-configuration',\n  templateUrl: './category-configuration.component.html',\n  styleUrls: ['./category-configuration.component.scss']\n})\nexport class CategoryConfigurationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n", "<p>category-configuration works!</p>\n", "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page404',\n  templateUrl: './page404.component.html',\n  styleUrls: ['./page404.component.scss']\n})\nexport class Page404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n", "URL NOT FOUND", "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: {\n    //baseUrl: 'http://localhost:11514/api'\n    baseUrl: 'http://freqxwsql04.cat.groupecat.com/CATLCR'\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n", "import { Pipe, PipeTransform } from '@angular/core';\nimport { reportStatus } from '../models/report.model';\n\n@Pipe({\n  name: 'reportStatusPipe'\n})\nexport class ReportStatusPipe implements PipeTransform {\n\n\n  transform(value: number): string {\n    return reportStatus[value];\n  }\n\n}\n", "import { controlTypes } from './../models/criteria.model';\nimport { FormGroup } from '@angular/forms';\nimport { Component, ElementRef, Input, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { criteriaModel } from '../models/criteria.model';\nimport { CriteriaService } from '../Services/criteria.service';\nimport { referentialModel } from '../models/Referential.Model';\n\n@Component({\n  selector: 'app-criteria-config',\n  templateUrl: './criteria-config.component.html',\n  styleUrls: ['./criteria-config.component.scss']\n})\nexport class CriteriaConfigComponent implements OnInit {\n  @Input() form:FormGroup;\n  @ViewChildren('sourceList') sources: QueryList<ElementRef>;\n  @ViewChildren('Type') types: QueryList<ElementRef>;\n  referentials: referentialModel[];\n  _controlTypes = controlTypes;\n  constructor(private criteriaService: CriteriaService) { }\n\n  ngOnInit(): void {\n    this.criteriaService!.getCriteriaReferentials().subscribe(data => {\n      this.referentials = data;\n    },(jsonData) => { }, () => { }); \n  }\n  \n  attributeDisplay = (attr1, attr2) => {\n      if(attr1 == attr2){\n        return this._controlTypes.filter(s => s.value == attr2)[0].text;\n      }\n  }\n}\n", "<div *ngIf=\"form\" [formGroup]=\"form\" class=\"criteria-config-line\" fxLayout=\"row wrap\"  fxLayoutGap='15px'>\n <!--<strong> {{crit.name}}</strong>\n    <span> with </span> -->\n    <input type=\"hidden\" asp-for=\"timestamp\" value=\"form.controls.timestamp.value\" />\n    <input type=\"hidden\" formControlName=\"id\" value=\"form.controls.id.value\"/>\n    <input formControlName=\"name\"  type=\"hidden\"/>\n    <input formControlName=\"reportID\"  type=\"hidden\"/>\n    <input formControlName=\"dataType\"  type=\"hidden\"/>\n    <mat-form-field appearance=\"legacy\" [style.width.px]=\"60\">\n      <mat-label>Order</mat-label>\n      <input matInput type=\"number\" placeholder=\"label\" formControlName=\"order\"\n      [value]=\"form.controls.order.value\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" [style.width.%]=\"20\">\n        <mat-label>Label</mat-label>\n        <input matInput placeholder=\"label\" formControlName=\"label\"\n        [value]=\"form.controls.label.value\">\n      </mat-form-field>\n    <mat-form-field appearance=\"fill\" [style.width.%]=\"20\">\n         <mat-label>Type</mat-label>\n        <mat-select #Type formControlName=\"controlType\"\n        [value]=\"form.controls.controlType.value\"\n        [compareWith]=\"attributeDisplay\"> \n          <mat-option *ngFor=\"let type of _controlTypes\" [value]=\"type.value\">{{type.text}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field *ngIf=\"Type.value == 3\" appearance=\"fill\" [style.width.%]=\"20\">\n        <mat-label>Referential</mat-label>\n        <mat-select formControlName=\"referential\"\n        [value]=\"form.controls.referential.value\"> \n          <mat-option *ngFor=\"let item of referentials\" [value]=\"item.id\">{{item.label}}</mat-option>\n          <!-- <mat-option *ngFor=\"let ref of referentials\" [value]=\"ref.id\">{{ref.name}}</mat-option> -->\n        </mat-select>\n      </mat-form-field>\n      <!-- *ngIf=\"Type.value == 'List'\" -->\n      <!-- <mat-form-field appearance=\"fill\" [style.width.%]=\"30\">\n        <mat-label>Criteria</mat-label> \n        <mat-select #Dependence [value]=\"'None'\" > \n          <mat-option value=\"None\">None</mat-option>\n          <mat-option value=\"product\">product</mat-option>\n          <mat-option value=\"marque\">marque</mat-option>\n          <mat-option value=\"brand\">brand</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" [style.width.%]=\"30\">\n        <mat-label>Column</mat-label> \n        <mat-select #Dependence [value]=\"'None'\" > \n          <mat-option value=\"None\">None</mat-option>\n          <mat-option value=\"product\">product</mat-option>\n          <mat-option value=\"marque\">marque</mat-option>\n          <mat-option value=\"brand\">brand</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" [style.width.%]=\"30\">\n        <mat-label>Columns</mat-label> \n        <mat-select #Dependence [value]=\"'None'\" > \n          <mat-option value=\"None\">None</mat-option>\n          <mat-option value=\"product\">product</mat-option>\n          <mat-option value=\"marque\">marque</mat-option>\n          <mat-option value=\"brand\">brand</mat-option>\n        </mat-select>\n      </mat-form-field> -->\n      <mat-slide-toggle color=\"primary\" formControlName=\"required\"\n       [checked]=\"form.controls.required.value\"> Required </mat-slide-toggle>\n\n       <mat-slide-toggle *ngIf=\"Type.value == 3\" color=\"primary\" formControlName=\"multiple\"\n       [checked]=\"form.controls.multiple.value\"> Select Multiple </mat-slide-toggle>\n</div>", "import { HttpClient, HttpHeaders, HttpParams, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { categoryModel, reportModel } from '../models/report.model';\nimport { HttpHelperService } from './http-helper.service';\n  \n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  constructor(private httpHelper: HttpHelperService) {}\n\n  updateReport(report: reportModel) {\n    return this.httpHelper.post(`/report/update`, report);\n  }\n\n  getReports(): Observable<reportModel[]> {\n    return this.httpHelper.get(`/report`);\n  }\n\n\n  getCategories() :  Observable<categoryModel[]> {\n     return this.httpHelper.get(`/report/categories`);\n  }\n\n  getReport(id: string, forConfig: boolean = false) : Observable<reportModel> {\n     const href = `/report/ID/${id}/forConfig/${forConfig}`;\n     return this.httpHelper.get(href);\n  }\n}", "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { loginModel, requestReset } from '../models/auth.model';\nimport { getFromStorage, removeFromStorage, saveToStorage } from '../Util/storage';\n\nconst API_BASE_URL = environment.api.baseUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private _httpClient: HttpClient\n    , private router: Router) { }\n\n  logout(redirectToLogin = true) {\n    removeFromStorage(\"user\");\n\n    if (redirectToLogin) {\n      this.router.navigate(['/login']);\n    }\n  }\n  authenticate = (login: loginModel): Observable<any> => {\n    const href = API_BASE_URL + '/auth/Authenticate';\n    let isAuth = new Subject<any>();\n    this._httpClient.post(href, login).subscribe((data:any) => {\n      if(data) {\n        saveToStorage(\"user\", data, true);\n        isAuth.next(true);\n      } else {\n        isAuth.next(false);\n      }\n    },  error => {\n        isAuth.next(error);\n    },);\n    return isAuth;\n  }\n\n  sendInitPass(value: requestReset): Observable<boolean> {\n    const href = API_BASE_URL + '/auth/send';\n    let result = new Subject<boolean>();\n    this._httpClient.post(href, value).subscribe((sent:boolean) => {\n      result.next(sent);\n    });\n    return result;\n  }\n\n  initPass(value: any): Observable<boolean> {\n    const href = API_BASE_URL + '/auth/init';\n    let result = new Subject<boolean>();\n    this._httpClient.post(href, value).subscribe((sent:boolean) => {\n      result.next(sent);\n    });\n    return result;\n  }\n}\n", "import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatOption } from '@angular/material/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MatSelect } from '@angular/material/select';\nimport { map, startWith } from 'rxjs/operators';\nimport { autoCompleteModel } from '../models/Referential.Model';\nimport { ReferentialService } from '../Services/referential.service';\nimport { CriteriaBase, option } from '../Util/criteria-base';\n\n@Component({\n  selector: 'app-criteria',\n  templateUrl: './criteria.component.html',\n  styleUrls: ['./criteria.component.scss']\n})\nexport class CriteriaComponent implements OnInit {\n  @Input() criteria: CriteriaBase<string> = null;\n  @Input() form: FormGroup;\n  @Output() criteriaValueChange = new EventEmitter<CriteriaBase<string>>();\n  filteredOptions: option[] = [];\n  selectedOptions: option[] = [];\n  autoComplete: autoCompleteModel;\n  public bankMultiFilterCtrl: FormControl = new FormControl();\n  @ViewChild('allSelected') private allSelected: MatOption;\n\n  constructor(private rs: ReferentialService) { }\n  \n  protected filterBanksMulti() {\n    // get the search keyword\n    let search = this.bankMultiFilterCtrl.value;\n    if (!search) return;\n     else search = search.toLowerCase();\n    this._filter(search);\n  }\n\n  ngOnInit() {\n    // listen for search field value changes\n    this.bankMultiFilterCtrl.valueChanges\n      .subscribe(() => {\n        this.filterBanksMulti();\n      });\n      if(this.criteria){\n        this.autoComplete = { id: this.criteria.referential, skip: 0, take: 10, predicate:''};\n        this.filteredOptions = this.criteria.options;\n      }\n        \n  }\n\n  private _filter(value: string) {\n    let options: option[];\n    this.autoComplete.predicate = value;\n    this.rs.getOptions(this.autoComplete).subscribe((data: option[]) => {\n      this.filteredOptions = data;\n      this.selectedOptions.forEach(option => {\n        if(!this.filteredOptions.find(s => s.value == option.value)) {\n          this.filteredOptions.splice(0, 0, option);\n        }\n      });\n        if (this.allSelected.selected) {\n    this.form.controls[this.criteria.key].patchValue([...this.filteredOptions.map(item => item.value), -1]);\n    this.selectedOptions = this.filteredOptions;\n  }\n    })\n  }\n\n  getError = (field) => {\n    return this.form.get(field).hasError('required') ? 'This criteria is mandatory' : '';\n}\n\n  valuechanged = (event) => {\n    // this.selectedOptions = [];\n    // if(Array.isArray(event.value))\n    //   if(!event.value.includes(-1)) {\n    //     event.value.forEach(value => {\n    //       if(!this.selectedOptions.includes(this.filteredOptions.find(s => s.value == value)))\n    //         this.selectedOptions.push(this.filteredOptions.find(s => s.value == value));\n    //     })\n    //   }\n    this.criteria.value = (Array.isArray(event.value) && event.value.includes(-1)) ? '-1' : event.value;\n    this.criteriaValueChange.emit(this.criteria);\n\n}\n\n  dateChanged(event: MatDatepickerInputEvent<Date>) {\n    this.criteria.value =event.value.toDateString();\n    this.criteriaValueChange.emit(this.criteria);\n}\n\n\ntogglePerOne(all){ \n  if (this.allSelected.selected) {  \n   this.allSelected.deselect();\n   return false;\n}\n//  if(this.form.controls[this.criteria.key].value.length==this.filteredOptions.length)\n//    this.allSelected.select();\n\n   this.selectedOptions = [];\n   let _value = this.form.controls[this.criteria.key].value;\n   if(Array.isArray(_value))\n     if(!_value.includes(-1)) {\n      _value.forEach(value => {\n         if(!this.selectedOptions.includes(this.filteredOptions.find(s => s.value == value)))\n           this.selectedOptions.push(this.filteredOptions.find(s => s.value == value));\n       })\n     }\n   this.criteria.value = (Array.isArray(_value) && _value.includes(-1)) ? '-1' : _value;\n   this.criteriaValueChange.emit(this.criteria);\n}\n\ntoggleAllSelection() {\n  if (this.allSelected.selected) {\n    this.form.controls[this.criteria.key].patchValue([...this.filteredOptions.map(item => item.value), -1]);\n  } else {\n    this.form.controls[this.criteria.key].patchValue([]);\n    this.selectedOptions = [];\n  }\n\n  let _value = this.form.controls[this.criteria.key].value;\n  this.selectedOptions = [];\n  if(Array.isArray(_value))\n    if(!_value.includes(-1)) {\n      _value.forEach(value => {\n        if(!this.selectedOptions.includes(this.filteredOptions.find(s => s.value == value)))\n          this.selectedOptions.push(this.filteredOptions.find(s => s.value == value));\n      })\n    }\n  this.criteria.value = (Array.isArray(_value) && _value.includes(-1)) ? '-1' : _value;\n  this.criteriaValueChange.emit(this.criteria);\n}\n}\n", "\n<div *ngIf=\"form\" [formGroup]=\"form\" fxLayout=\"column wrap\" fxLauoutAlign='space-between center' \n  fxLayoutGap='20px'>\n  <div [ngSwitch]=\"criteria.controlType\">\n         <mat-form-field appearance=\"fill\" *ngSwitchCase=\"'textbox'\" [style.width.%]=\"80\">\n            <mat-label>{{criteria.label}}</mat-label>\n            <input [id]=\"criteria.key\" (change)=\"valuechanged($event)\" [type]=\"criteria.type\"\n             matInput placeholder=\"\" [formControlName]=\"criteria.key\" [required]=\"criteria.required\">\n            <mat-error *ngIf=\"!form.controls[criteria.key].valid\">{{getError(criteria.key)}}</mat-error>\n        </mat-form-field>\n\n       <mat-form-field appearance=\"fill\" *ngSwitchCase=\"'dropdown'\" [style.width.%]=\"80\">\n            <mat-label>{{criteria.label}}</mat-label>\n            <!-- <input #filterInput matInput type=\"input\" (keyup)=\"filter($event);\"> (selectionChange)=\"valuechanged($event)\"-->\n            <mat-select [formControlName]=\"criteria.key\" \n            [multiple]=\"criteria.multiple\" [required]=\"criteria.required\">\n            <mat-option>\n              <ngx-mat-select-search [formControl]=\"bankMultiFilterCtrl\" placeholderLabel=\"search...\" \n              noEntriesFoundLabel=\"no matching record found\">\n                <mat-icon ngxMatSelectSearchClear>clear</mat-icon>\n              </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngIf=\"filteredOptions && filteredOptions.length > 0\"\n              (click)=\"toggleAllSelection()\" #allSelected [value]=\"-1\">All</mat-option>\n              <mat-option (click)=\"togglePerOne(allSelected.viewValue)\" \n              *ngFor=\"let option of filteredOptions\" [value]=\"option.value\" >\n                {{option.key}}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"!form.controls[criteria.key].valid\">{{getError(criteria.key)}}</mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"fill\" *ngSwitchCase=\"'date'\"  [style.width.%]=\"80\">\n            <mat-label>{{criteria.label}}</mat-label>\n            <input matInput (dateChange)=\"dateChanged($event)\" [id]=\"criteria.key\" \n            [formControlName]=\"criteria.key\" [matDatepicker]=\"picker\" [required]=\"criteria.required\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n    </div>\n</div>\n", "import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { autoCompleteModel } from '../models/Referential.Model';\nimport { option } from '../Util/criteria-base';\nimport { HttpHelperService } from './http-helper.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReferentialService {\n\n  constructor(private httpHelper: HttpHelperService) { }\n\n  getOptions(model: autoCompleteModel): Observable<option[]> {\n    return this.httpHelper.get('/referential/options', {params: model});\n  }\n}\n", "import { AuthService } from 'src/app/shared/Services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { getFromStorage } from '../Util/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportGuard implements CanActivate {\n  \n  \n  constructor(\n    private router: Router\n    , private authService:AuthService\n  ) { }\n\n  /*\n    to see if the given route can be activated,\n    this one here is checking if a user can activate authenticated routes\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const user = getFromStorage('user');\n    // for any other URL if user is logged-in then continue\n    if (user && user.isAuthenticated) return true;\n    if(state.url === '/login' || state.url.split('/').indexOf('initpass') !== -1) return true;\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n\n  /*|\n    to check if the child routes can be activated,\n    in this case it is providing role guard service\n   */\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const user = getFromStorage('user');\n    if(user) {\n      // the admin role can access all routes while the other users can only access dashboard route\n      if (!user.isAdmin && state.url === '/ReportConfiguration') {\n        this.router.navigate(['/reports']);\n        return false;\n      }\n      return true;\n    } else {\n      // if user is not loggedn in delete storage and navigate to login page\n      this.authService.logout();\n    }\n    return false;\n  }  \n}\n", "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-global-setting',\n  templateUrl: './global-setting.component.html',\n  styleUrls: ['./global-setting.component.scss']\n})\nexport class GlobalSettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n", "<p>global-setting works!</p>\n", "import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExitDirtyComponent } from 'src/app/shared/modals/exit-dirty/exit-dirty.component';\nimport { reportModel, reportStatus } from 'src/app/shared/models/report.model';\nimport { CriteriaService } from 'src/app/shared/Services/criteria.service';\nimport { ReportService } from 'src/app/shared/Services/report.service';\n@Component({\n  selector: 'app-report-configuration',\n  templateUrl: './report-configuration.component.html',\n  styleUrls: ['./report-configuration.component.scss']\n})\nexport class ReportConfigurationComponent implements OnInit {\n  report: reportModel;\n  reports: reportModel[];\n  form:FormGroup;\n  payLoad:any;\n\n  constructor(private cs: CriteriaService\n    , private rs: ReportService\n    , private route: ActivatedRoute\n    , private _snackBar: MatSnackBar\n    , private fb: FormBuilder\n    , private router: Router\n    , public dialog: MatDialog) {\n      this.rs!.getReports().subscribe(data => {\n        this.reports = data;\n      });\n\n      route.params.subscribe(val => {\n        this.rs!.getReport(this.route.snapshot.paramMap.get('id'), true).subscribe(data => {\n          this.report = data;\n          this.buildForm();\n        },(jsonData) => { }, () => { }); \n      });\n  }\n\n  openDialog(url:string) {\n    const dialogRef = this.dialog.open(ExitDirtyComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result == true) this.router.navigate([url]);\n    });\n  }\n\n  ngAfterViewInit() {\n   \n  }\n\n  navigate(event: Event) {\n\n    let value: string = (event as unknown as MatSelectChange).value; \n    if(value == undefined) return;\n    let _url = `/ReportConfiguration/${value}`;\n  if(this.form.dirty){\n    this.openDialog(_url);\n  } else {\n    this.router.navigate([_url]);\n  }\n  }\n  \n  ngOnInit(): void {\n\n  }\n\n  buildForm(){\n    var criterias = this.report.criterias.filter(s => !s.hidden).sort((a,b) => a.order - b.order);\n    const criteriaGroup = criterias.map(x => this.fb.group({\n      timestamp : this.fb.control(x.timestamp),\n      id: this.fb.control(x.id),\n      label: this.fb.control(x.label, Validators.required),\n      name: this.fb.control(x.name),\n      controlType: this.fb.control(x.controlType, Validators.required),\n      referential: this.fb.control(x.referential),\n      multiple: this.fb.control(x.multiple),\n      order: this.fb.control(x.order),\n      required: this.fb.control(x.required),\n      reportID: this.fb.control(x.reportID),\n      dataType: this.fb.control(x.dataType)\n    }));\n\n    const subreportGroup = this.report.subreports.map(x => this.fb.group({\n      label: this.fb.control(x.label, Validators.required),\n      name: this.fb.control(x.name),\n      parentReportID: this.fb.control(x.parentReportID),\n      id: this.fb.control(x.id),\n      categoryID : this.fb.control(x.categoryID),\n      timestamp : this.fb.control(x.timestamp),\n      reportPath: new FormControl(x.reportPath),\n      reportServer: new FormControl(x.reportServer),\n      subreport: new FormControl(x.subreport)\n    }));\n    \n    this.form = new FormGroup({\n      timestamp : this.fb.control(this.report.timestamp),\n      label : new FormControl(this.report.label, Validators.required),\n      name : new FormControl({value:this.report.name, disabled: true}),\n      category : new FormControl({value:this.report.category.name, disabled: true}),\n      updated : new FormControl({value:this.report.updatedOn, disabled: true}),\n      reportPath: new FormControl(this.report.reportPath, Validators.required),\n      reportServer: new FormControl(this.report.reportServer, Validators.required),\n      subreports: this.fb.array(subreportGroup),\n      criterias: new FormArray(criteriaGroup)\n    });\n  }\n\n   validator(ctrl) :boolean {\n    const validator = this.form.get(ctrl).validator({} as AbstractControl);\n    if (validator && validator.required) {\n      return true;\n    }\n    return false;\n  }\n\n  onSubmit() {\n    Object.assign(this.report, this.form.value);\n    this.report.status = reportStatus.Supported;\n    this.report.updatedOn = new Date();\n\n    this.rs.updateReport(this.report).subscribe(respons => {\n      this.report = respons as unknown as reportModel;\n      this._snackBar.open('Successfully saved !', '', { duration: 6000, panelClass: ['alert-success'] });\n    });\n  }\n}\n", "<form *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <mat-form-field appearance=\"legacy\"  [style.width.px]=\"400\">\n    <mat-label>Report name</mat-label>\n    <mat-select (selectionChange)=\"navigate($event)\"> \n      <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">{{report.label}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n<mat-card class=\"report-config\">\n    <mat-card-header class=\"reportcard-header\">\n      <mat-toolbar class=\"reportviewer-header\">\n        <span class=\"example-spacer\"></span>\n        <div align=\"end\">\n          <div fxLayout=\"row\"  fxLayoutGap='15px'>\n            <button  type=\"submit\" [disabled]=\"!form.valid\"\n             mat-flat-button><mat-icon>save</mat-icon></button>\n            </div>\n        </div> \n      </mat-toolbar>\n    </mat-card-header> \n    <mat-card-content class=\"input-form-content\">\n        <mat-tab-group>\n          <mat-tab label=\"General\" [disabled]=\"!report\"> \n            <div class=\"config-container\">\n                <div fxLayout=\"row\" *ngIf=\"report\" fxGapLayout=\"20px\" style=\"padding:20px 20px 20px 0\">\n                  <div fxLayout=\"column\">\n                    <input type=\"hidden\" formControlName=\"timestamp\" [value]=\"form.controls.timestamp.value\" />\n                  <mat-form-field appearance=\"legacy\" [style.width.px]=\"400\">\n                    <mat-label>Label</mat-label>\n                    <input matInput formControlName=\"label\" \n                    [value]=\"form.controls.label.value\"\n                    required>\n                  </mat-form-field>\n                  <mat-form-field appearance=\"legacy\" [style.width.px]=\"400\">\n                    <mat-label>Path</mat-label>\n                    <input matInput formControlName=\"reportPath\" \n                    [value]=\"form.controls.reportPath.value\"\n                    required>\n                  </mat-form-field>\n                  <mat-form-field appearance=\"legacy\" [style.width.px]=\"400\">\n                    <mat-label>Server</mat-label>\n                    <input matInput formControlName=\"reportServer\" \n                    [value]=\"form.controls.reportServer.value\"\n                    required>\n                  </mat-form-field>\n                  <mat-form-field appearance=\"legacy\" [style.width.px]=\"400\">\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" [value]=\"form.controls.name.value\">\n                  </mat-form-field>\n                  <mat-form-field appearance=\"legacy\" [style.width.px]=\"400\">\n                    <mat-label>Category</mat-label>\n                    <input matInput formControlName=\"category\" [value]=\"form.controls.category.value\">\n                  </mat-form-field>\n                  <mat-form-field appearance=\"legacy\" [style.width.px]=\"400\">\n                    <mat-label>Last updated</mat-label>\n                    <input matInput formControlName=\"updated\"  [value]=\"form.controls.updated.value | momentPipe: 'MMMM Do YYYY, h:mm:ss a'\"\n                     >\n                  </mat-form-field>\n                </div>\n                <div class=\"report-parts\" *ngIf=\"report.subreports.length > 0\">\n                  <table>\n                    <thead>\n                      <th>Name</th>\n                      <th>Sub reports</th>\n                    </thead>\n                    <tbody>\n                      <tr\n                      *ngFor=\"let subreportForm of form.controls.subreports.controls;let i = index;\" \n                      [formGroup]=\"subreportForm\">\n                      <td>\n                        {{subreportForm.controls.name.value}}\n                      </td>\n                        <td>    \n                          <mat-form-field appearance=\"legacy\" [style.width.%]=\"100\">\n                          <input matInput  formControlName=\"label\" [value]=\"subreportForm.controls.label.value\" required>\n                        </mat-form-field>\n                        <input type=\"hidden\" formControlName=\"id\" value=\"subreportForm.controls.id.value\"/>\n                        <input type=\"hidden\" formControlName=\"parentReportID\" value=\"subreportForm.controls.parentReportID.value\"/>\n                        <input type=\"hidden\" formControlName=\"categoryID\" value=\"subreportForm.controls.categoryID.value\"/>\n                        <input type=\"hidden\" formControlName=\"subreport\" value=\"subreportForm.controls.subreport.value\"/>\n                        <input type=\"hidden\" formControlName=\"timestamp\" value=\"subreportForm.controls.timestamp.value\" />\n                        <input type=\"hidden\" formControlName=\"reportPath\" value=\"subreportForm.controls.reportPath.value\" />\n                        <input type=\"hidden\" formControlName=\"reportServer\" value=\"subreportForm.controls.reportServer.value\" />\n                      </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n            <mat-tab label=\"Criteria\" [disabled]=\"!report\"> \n        <div class=\"config-container\">\n        <app-criteria-config *ngFor=\"let criteriaForm of form.controls.criterias.controls;let i = index;\" \n        [formGroup]=\"criteriaForm\"\n        [form]=\"criteriaForm\"></app-criteria-config>\n        </div>\n    </mat-tab>\n    <mat-tab *ngIf=\"false\" label=\"Scheduler\" [disabled]=\"!report\">\n      <mat-slide-toggle> Schedule this report for mailing</mat-slide-toggle>\n    \n      <mat-form-field  appearance=\"legacy\" [style.width.px]=\"400\">\n        <mat-label>Date control</mat-label>\n        <mat-select> \n          <mat-option value=\"1\">Today</mat-option>\n          <mat-option value=\"2\">Current month</mat-option>\n          <mat-option value=\"3\">Current year</mat-option>\n          <mat-option value=\"4\">Before x days</mat-option>\n          <mat-option value=\"5\">Before x months</mat-option>\n          <mat-option value=\"6\">Before x years</mat-option>\n          <mat-option value=\"7\">Between x days and y days</mat-option>\n          <mat-option value=\"8\">Between x months and y months</mat-option>\n          <mat-option value=\"9\">Between x years and y years</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </mat-tab>\n    </mat-tab-group>\n\n    </mat-card-content>\n  </mat-card>\n</form>", "import { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { reportModel } from 'src/app/shared/models/report.model';\nimport { CriteriaControlService } from 'src/app/shared/Services/criteria-control.service';\nimport { CriteriaService } from 'src/app/shared/Services/criteria.service';\nimport { ReportService } from 'src/app/shared/Services/report.service';\nimport { CriteriaBase } from 'src/app/shared/Util/criteria-base';\nimport { getFromStorage } from 'src/app/shared/Util/storage';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ReportComponent implements OnInit {\n  user = getFromStorage(\"user\");\n  criteriaShown:boolean = true;\n  criterias: CriteriaBase<any>[];\n  report: reportModel;\n  displayedReport: reportModel;\n  parameters: any [];\n  language: string = \"en-us\";\n  form: FormGroup;\n  height: string = '80.2vh';\n\n  constructor(private cs: CriteriaService\n    , private ccs: CriteriaControlService\n    , private rs: ReportService\n    , private route: ActivatedRoute) {\n\n      this.form = new FormGroup({});\n      this.rs!.getReport(this.route.snapshot.paramMap.get('id')).subscribe(data => {\n        this.report = data;\n        if(this.report.subreports.length > 0){\n          this.report.subreports = this.report.subreports.sort((a, b) => a.order - b.order);\n          this.displayedReport = this.report.subreports[0];\n          this.height = '72.8vh';\n        } \n        else this.displayedReport = this.report;\n        this.criterias = this.cs.getCriterias(this.report.criterias.filter(s => !s.hidden).sort((a,b) => a.order - b.order));\n        this.form = this.ccs.toFormGroup(this.criterias);\n        \n      });\n    \n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onSubmit() {\n    this.getFormValues();\n  }\n\n  displayCiteria = () => {\n    this.criteriaShown = !this.criteriaShown;\n  }\n\n  criteriaValueChanged(event){\n    if(this.form.valid) {\n\n      this.getFormValues();\n    }\n  }\n\n  refresh(event) {\n    if(this.form.valid) {\n      this.displayedReport = this.report.subreports[event];\n      this.getFormValues();\n    }\n  }\n\n  getFormValues = () => {\n    const params = [];\n    this.criterias.forEach(crit => {\n      let val = this.form.controls[crit.key].value;\n      val = (Array.isArray(val) && val.includes(-1)) ? '-1' : val;\n      params.push({\n        criteriaId: crit.id,\n        key: crit.key,\n        value:((crit.controlType == 'date')? moment(val).format('yyyy-MM-DD') :\n               (Array.isArray(val)) ? val.join(',') : val ),\n        scheduler: false\n      });\n    });\n    this.cs.saveSearchCriterias(params).subscribe(saved => {\n      if(saved) this.parameters = params;\n    });\n  }\n\n  export(format: string){\n    let _url = `${this.report.reportServer}?${this.report.reportPath}`;\n    _url += `&uid=${encodeURI(this.user.id)}`;\n    _url += `&rid=${encodeURI(this.report.id)}`;\n    // this.parameters.forEach(param => {\n    //   // let _val: string;\n    //   // if(Array.isArray(param.value)) _val = param.value.join(',');\n    //   // else _val = param.value;\n    //   _url += `&${encodeURI(param.key)}=${encodeURI(param.value)}`;\n    // })\n    //_url += this.report\n    _url += `&rs:Format=${format}`;\n\n    window.location.href = _url;\n  }\n\n\n\n\n\n  @ViewChild('reportCard', {read: ElementRef}) divRef: ElementRef;\n  isFullscreen = false;\n\nopenFullscreen() {\n  // Use this.divRef.nativeElement here to request fullscreen\n  const elem = this.divRef.nativeElement;\n\n  if(this.isFullscreen){\n    this.isFullscreen = false;\n    const cancellFullScreen = document.exitFullscreen;\n    cancellFullScreen.call(document);\n  } else {\n    this.isFullscreen = true;\n    const requestFullScreen = elem.requestFullscreen || elem.webkitRequestFullScreen \n    || elem.mozRequestFullScreen || elem.msRequestFullScreen;\n    requestFullScreen.call(elem);\n  }\n}\n\n}\n\n\n", "<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\" class=\"form\">\n<div fxLayout=\"row\" class=\"main-container\"  fxLauoutAlign='space-between center'>\n  \n  <mat-card class=\"criterias\" *ngIf=\"criteriaShown\">\n    <mat-card-header class=\"input-form-header\">\n        <mat-card-title>Criterias</mat-card-title>\n        <!-- <mat-card-subtitle>Select criteria then click display</mat-card-subtitle> -->\n    </mat-card-header>\n    <mat-card-content *ngIf=\"form\" class=\"input-form-content\">\n      <!-- <app-criteria-holder [criterias]=\"criterias$ | async\"></app-criteria-holder> -->\n      <app-criteria  *ngFor=\"let criteria of criterias\" [criteria]=\"criteria\" (criteriaValueChange)=\"criteriaValueChanged($event)\" [form]=\"form\"></app-criteria>\n    </mat-card-content>\n  </mat-card>\n  \n  <mat-card class=\"report\" #reportCard>\n    <mat-card-header class=\"reportcard-header\">\n      <mat-toolbar class=\"reportviewer-header\">\n        <span>\n          <div fxLayout=\"column\" fxLauoutAlign='space-between center'>\n            <mat-icon class=\"arrow\"  *ngIf=\"criteriaShown\" (click)=\"displayCiteria();\">arrow_left</mat-icon>\n            <mat-icon class=\"arrow\" *ngIf=\"!criteriaShown\" (click)=\"displayCiteria();\">arrow_right</mat-icon>\n          </div>\n        </span>\n        <span>\n          <span *ngIf=\"report\">{{report.label}}</span>\n        </span>\n        <span class=\"example-spacer\"></span>\n        <div align=\"end\">\n          <div fxLayout=\"row\"  fxLayoutGap='15px' *ngIf=\"form\">\n            <!-- <button type=\"button\"  mat-flat-button type=\"submit\" (click)=\"onSubmit();\" [disabled]=\"!form.valid\"><mat-icon>cached</mat-icon></button> -->\n            <button type=\"button\" [matMenuTriggerFor]=\"menu\" mat-flat-button [disabled]=\"!form.valid\"><mat-icon>get_app</mat-icon></button>\n            <button type=\"button\" (click)=\"openFullscreen()\" mat-flat-button ><mat-icon>{{ isFullscreen ? 'fullscreen_exit' : 'fullscreen'}}</mat-icon></button>\n          </div>\n            <mat-menu #menu=\"matMenu\">\n              <button mat-menu-item (click)=\"export('ExcelOpenXML');\">\n                <span>Excel</span>\n              </button>\n              <button mat-menu-item (click)=\"export('pdf');\">\n                <span>PDF</span>\n              </button>\n            </mat-menu>\n        </div> \n    </mat-toolbar>\n    </mat-card-header>\n    <mat-card-content class=\"input-form-content\">\n    <mat-tab-group *ngIf=\"report && report.subreports && report.subreports.length > 0\" \n      (selectedIndexChange)=\"refresh($event);\">\n      <mat-tab *ngFor=\"let rpt of report.subreports\" [label]=\"rpt.label\"> \n        </mat-tab>\n      </mat-tab-group>\n      <app-report-viewer *ngIf=\"displayedReport\"\n      [reportserver]=\"displayedReport.reportServer\"\n      [reporturl]=\"displayedReport.reportPath\"\n      [report]=\"displayedReport\"\n      [parameters]=\"parameters\" \n      [language]=\"language\"\n      [height]=\"height\">\n      </app-report-viewer>\n    </mat-card-content>\n  </mat-card>\n</div>\n</form>\n", "import { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { Page404Component } from './page404/page404.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { CriteriaComponent } from './criteria/criteria.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { NgMatSearchBarModule } from 'ng-mat-search-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { RouterModule } from '@angular/router';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { MatInputModule } from '@angular/material/input';\nimport { SettingLayoutComponent } from './setting-layout/setting-layout.component';\nimport { CriteriaConfigComponent } from './criteria-config/criteria-config.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MomentPipe } from './Pipes/moment.pipe';\nimport { BooleanPipe } from './pipes/boolean.pipe';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ReportViewerComponent } from './report-viewer/report-viewer.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { ReportStatusPipe } from './Pipes/report-status.pipe';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport {MatSelectInfiniteScrollModule} from 'ng-mat-select-infinite-scroll';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { ExitDirtyComponent } from './modals/exit-dirty/exit-dirty.component';\n\n@NgModule({\n  declarations: [\n    CriteriaComponent,\n    LayoutComponent,\n    Page404Component,\n    SettingLayoutComponent,\n    CriteriaConfigComponent,\n    MomentPipe,\n    BooleanPipe,\n    ReportViewerComponent,\n    ReportStatusPipe,\n    ExitDirtyComponent,\n  ],\n  exports: [\n    HttpClientModule,\n    CriteriaComponent,\n    LayoutComponent,\n    CriteriaConfigComponent,\n    Page404Component,\n    MatFormFieldModule,\n    MatInputModule,\n    MomentPipe,\n    BooleanPipe,\n    ReportStatusPipe,\n    ReportViewerComponent,\n    MatSnackBarModule,\n    NgxMatSelectSearchModule,\n    MatCardModule,\n    MatDialogModule,\n    ExitDirtyComponent\n  ],\n  imports: [\n    RouterModule,\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    NgMatSearchBarModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatMenuModule,\n    ReactiveFormsModule,\n    MatSidenavModule,\n    NgxMatSelectSearchModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSnackBarModule,\n    MatSelectInfiniteScrollModule,\n    MatDialogModule\n\n  ]\n})\nexport class SharedModule { }\n", "var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";", "import { Component, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CriteriaService } from './shared/Services/criteria.service';\nimport { CriteriaBase } from './shared/Util/criteria-base';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n  constructor() {\n    //this.criterias$ = service.getQuestions();\n  }\n}\n", "<!-- <div class=\"glob-container\" fxLayout=\"row wrap\" >\n  <mat-toolbar color=\"primary\" class=\"header\">\n    <!-- <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item><mat-icon>person</mat-icon><span>Badr ELKAMILI</span></button>\n      <button mat-menu-item><mat-icon>settings_power</mat-icon><span>Terminer la session</span></button>\n    </mat-menu>\n\n    <span>CATLCR</span>\n    <span class=\"example-spacer\">\n    </span>\n    <mat-search-bar class=\"search\"></mat-search-bar>\n    <mat-divider vertical style=\"height:30px\"></mat-divider>\n    <button mat-flat-button type=\"button\" class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>language</mat-icon>\n    </button>\n    <mat-divider vertical style=\"height:30px\"></mat-divider>\n    <button mat-flat-button type=\"button\" class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n      <mat-icon>settings</mat-icon>\n    </button>\n    <mat-divider vertical style=\"height:30px\"></mat-divider>\n    <button mat-flat-button type=\"button\" class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      Badr\n    </button>\n  <!-- <button\n  type=\"button\"\n  mat-button>\n  <mat-icon>settings</mat-icon>\n  </button> \n  </mat-toolbar>\n  <app-criteria-holder class=\"criteria-box\" [criterias]=\"criterias$ | async\"></app-criteria-holder>\n  <div class=\"container\">\n    <mat-tab-group  [color]=\"'primary'\" [backgroundColor]=\"'primary'\">\n      <mat-tab label=\"Tab 1\">\n        <div class=\"report-container\">\n        <ssrs-reportviewer\n        [reportserver]=\"reportServer\"\n        [reporturl]=\"reportUrl\"\n        [showparameters]=\"showParameters\" \n        [parameters]=\"parameters\" \n        [language]=\"language\" \n        [toolbar]=\"toolbar\" >\n        </ssrs-reportviewer>\n      </div>\n      </mat-tab>\n      <mat-tab label=\"Tab 2\"> Content 2 </mat-tab>\n      <mat-tab label=\"Tab 3\"> Content 3 </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n -->\n <ngx-ui-loader></ngx-ui-loader>\n<router-outlet></router-outlet>\n", "import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpResponse, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AuthService } from '../Services/auth.service';\r\nimport { getFromStorage } from './storage';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class interceptor implements HttpInterceptor {\r\n\r\n    constructor(private auth: AuthService){\r\n\r\n    }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        request = request.clone({\r\n          setHeaders: {\r\n            Authorization: `Bearer ${getFromStorage(\"user\").token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        return next.handle(request).pipe(\r\n          catchError(\r\n            (err, caught) => {\r\n              if (err.status === 401){\r\n                this.auth.logout();\r\n                return of(err);\r\n              }\r\n              throw err;\r\n            }\r\n          )\r\n        );\r\n      }\r\n}", "import { CategoryConfigurationComponent } from './category-configuration/category-configuration.component';\nimport { GlobalSettingComponent } from './global-setting/global-setting.component';\nimport { ReportConfigurationComponent } from './report-configuration/report-configuration.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path: 'GlobalConfiguration', component:GlobalSettingComponent },\n  {path: 'CategoryConfiguration', component:CategoryConfigurationComponent },\n  { path: 'ReportConfiguration', component: ReportConfigurationComponent },\n  { path: 'ReportConfiguration/:id', component: ReportConfigurationComponent }\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingRoutingModule { }\n\n\n", "export class CriteriaBase<T> {\r\n    id: string;\r\n    value: T;\r\n    key: string;\r\n    label: string;\r\n    required: boolean;\r\n    order: number;\r\n    controlType: string;\r\n    type: string;\r\n    referential: string;\r\n    options: {key: string, value: string, source:any}[];\r\n    multiple: boolean;\r\n    constructor(options: {\r\n        id?: string;\r\n        value?: T;\r\n        key?: string;\r\n        label?: string;\r\n        required?: boolean;\r\n        order?: number;\r\n        controlType?: string;\r\n        type?: string;\r\n        referential?: string;\r\n        multiple?: boolean;\r\n        options?: {key: string, value: string, source:any}[];\r\n      } = {}) {\r\n      this.id = options.id;\r\n      this.value = options.value;\r\n      this.key = options.key || '';\r\n      this.label = options.label || '';\r\n      this.required = !!options.required;\r\n      this.order = options.order === undefined ? 1 : options.order;\r\n      this.controlType = options.controlType || '';\r\n      this.type = options.type || '';\r\n      this.options = options.options || [];\r\n      this.referential  = options.referential;\r\n      this.multiple = options.multiple;\r\n    }\r\n  }\r\n\r\n  export interface option {\r\n    key: string;\r\n    value: string;\r\n    source: any;\r\n  }", "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exit-dirty',\n  templateUrl: './exit-dirty.component.html',\n  styleUrls: ['./exit-dirty.component.scss']\n})\nexport class ExitDirtyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n", "<h2 mat-dialog-title>Close</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <p>There is unsaved changed in the form, do you want to proceed ?</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Close</button>\n</mat-dialog-actions>\n", "import { criteriaModel } from './criteria.model';\r\n\r\nexport interface reportModel {\r\n    order: number;\r\n    parentReportID: string;\r\n    reportServer: string;\r\n    categoryID: string;\r\n    reportPath:string;\r\n    name: string;\r\n    label: string;\r\n    id: string;\r\n    updatedOn: Date;\r\n    updatedBy: string;\r\n    scheduled: boolean;\r\n    status: number;\r\n    criterias: criteriaModel[];\r\n    category: categoryModel;\r\n    subreports: reportModel[];\r\n    timestamp: string;\r\n    subreport: boolean;\r\n}\r\n\r\nexport interface categoryModel {\r\n    id: string;\r\n    name: string;\r\n    label: string;\r\n}\r\n\r\nexport enum reportStatus {\r\n    'Unsupported' = 0,\r\n    'Supported' = 1,\r\n    'Inactive' = 2\r\n}", "import { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LoginComponent } from './login/login.component';\nimport { InitPassComponent } from './init-pass/init-pass.component';\nimport { FlexLayoutModule, FlexModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n@NgModule({\n  declarations: [LoginComponent, InitPassComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule\n  ]\n})\nexport class AuthModule { }\n", "import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReportingModule } from './reporting/reporting.module';\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CUSTOM_ELEMENTS_SCHEMA, ErrorHandler, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { SettingModule } from './setting/setting.module';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NgMatSearchBarModule } from 'ng-mat-search-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { NgxUiLoaderModule, NgxUiLoaderHttpModule, NgxUiLoaderRouterModule, NgxUiLoaderConfig } from \"ngx-ui-loader\";\nimport { AuthModule } from './auth/auth.module';\nimport { ErrorAlerter } from './shared/Util/ErrorHandler';\nimport { interceptor } from './shared/Util/interceptor';\n\nconst ngxUiLoaderConfig: NgxUiLoaderConfig  =\n{\n  \"bgsColor\": \"rgba(206,177,177,0.09)\",\n  \"bgsOpacity\": 0.2,\n  \"bgsPosition\": \"bottom-right\",\n  \"bgsSize\": 60,\n  \"bgsType\": \"cube-grid\",\n  \"blur\": 5,\n  \"delay\": 0,\n  \"fastFadeOut\": true,\n  \"fgsColor\": \"#4e93ff\",\n  \"fgsPosition\": \"center-center\",\n  \"fgsSize\": 60,\n  \"fgsType\": \"cube-grid\",\n  \"gap\": 24,\n  \"logoPosition\": \"center-center\",\n  \"logoSize\": 120,\n  \"logoUrl\": \"\",\n  \"masterLoaderId\": \"master\",\n  \"overlayBorderRadius\": \"0\",\n  \"overlayColor\": \"rgba(40, 40, 40, 0.8)\",\n  \"pbColor\": \"#4e93ff\",\n  \"pbDirection\": \"ltr\",\n  \"pbThickness\": 3,\n  \"hasProgressBar\": true,\n  \"text\": \"\",\n  \"textColor\": \"#FFFFFF\",\n  \"textPosition\": \"center-center\",\n  \"maxTime\": -1\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    SharedModule,\n    ReportingModule,\n    SettingModule,\n    AuthModule,\n    RouterModule,\n    CommonModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatMenuModule,\n    MatToolbarModule,\n    NgMatSearchBarModule,\n    MatDividerModule,\n    MatTabsModule,\n    NgxUiLoaderModule,\n    NgxUiLoaderRouterModule.forRoot({ showForeground: true }),\n    NgxUiLoaderHttpModule.forRoot({ showForeground: true }),\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig),\n  ],\n  providers: [    \n    {\n    provide: ErrorHandler,\n    useClass: ErrorAlerter,\n  },\n  interceptor],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n\n\n", "import { ReportGuard } from './../shared/guards/report.guard';\n\nimport { ReportComponent } from './report/report.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component:ReportsComponent },\n  { path: 'reports', component: ReportsComponent },\n  { path: 'report/:id',  component: ReportComponent, canActivate: [ReportGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportingRoutingModule { }\n", "import { HttpClient, HttpEvent, HttpEventType, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { isString } from 'util';\nimport { getFromStorage } from '../Util/storage';\n\nconst API_BASE_URL = environment.api.baseUrl;\nconst USER = 'user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpHelperService {\n\n  constructor(private http: HttpClient) { }\n\n    /**\n   * Performs a request with `get` http method.\n   * default query params (pagination) are added to each get request\n   * @param url the url\n   * @param options the request options\n   */\n  get(url: string, options?: any): Observable<any> {\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.headers == null) {\n      options.headers = new HttpHeaders();\n    }\n    // IE 11 caches get requests, to avoid this we set these Http headers\n    options.headers = options.headers.set('Cache-Control', 'no-cache').set('Pragma', 'no-cache');\n\n    return this.http\n      .get(API_BASE_URL + url, this.requestOptions({ ...options, params: { ...(options ? options.params : {}) } }));\n  }\n\n  /**\n   * Performs a request with `post` http method.\n   * @param url the url\n   * @param body the body\n   * @param options the request options\n   */\n  post(url: string, body: any, options?: any, isUpload?: boolean): Observable<any> {\n    return this.http\n      .post(API_BASE_URL + url, body, this.requestOptions(options, isUpload));\n  }\n\n\n  /**\n   * Wrapper for an upload file post request, to handle progress events, etc\n   * @param url the url\n   * @param file - the file to be uploaded\n   * @param options the request options\n   */\n  upload(url: string, file: File, options?: any): Observable<any> {\n    // pass file to uploaded as formData\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const uploadOptions = {\n      reportProgress: true,\n      observe: 'events'\n    };\n\n    return this.post(url, formData, { ...options, ...uploadOptions }, true)\n      .pipe(\n        map((event: HttpEvent<any>) => {\n          switch (event.type) {\n\n            case HttpEventType.Sent:\n              return { status: 'progress', progress: 0 };\n\n            case HttpEventType.UploadProgress:\n              const progress = Math.round(100 * event.loaded / event.total);\n              return { status: 'progress', progress };\n\n            case HttpEventType.Response:\n              return { status: 'completed', completedResponse: event.body };\n\n            default:\n              return `Unhandled Event: ${event.type}`;\n          }\n        })\n      );\n  }\n\n  /**\n   * Performs a request with `put` http method.\n   * @param url the url\n   * @param body the body\n   * @param options the request options\n   */\n  put(url: string, body: any, options?: any, isUpload?: boolean): Observable<any> {\n    return this.http\n      .put(API_BASE_URL + url, body, this.requestOptions(options, isUpload));\n  }\n\n  /**\n   * Performs a request with `delete` http method.\n   * @param url the url\n   * @param options the request options\n   */\n  delete(url: string, options?: any): Observable<any> {\n    return this.http\n      .delete(API_BASE_URL + url, this.requestOptions(options));\n  }\n\n  /**\n   * Configure request options.\n   * @param options - request options\n   * @param isUpload the flag if the request is made for upload\n   */\n  private requestOptions(options?: any, isUpload?: boolean): any {\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.headers == null) {\n      options.headers = new HttpHeaders();\n    }\n\n\n    if (options.params != null) {\n      if (typeof(options.params) === 'string') {\n        options.params.forEach((value, key) => {\n          if (value || (typeof(value) === 'string' && value.length === 0)) {\n            delete options.params[key];\n          }\n        });\n      }\n    }\n\n    const accessTokenUser = getFromStorage(USER);\n\n\n    // add the access token to headers if it user is authenticated\n    if (accessTokenUser.token) {\n      options.headers = options.headers.set('Authorization', 'Bearer ' + accessTokenUser.token);\n    }\n    if (!options.headers.has('Content-type') && !isUpload) {\n      options.headers = options.headers.set('Content-Type', 'application/json');\n    }\n\n    return options;\n  }\n}\n\n\n", "import { CriteriaTextbox } from './../Util/criteria-textbox';\nimport { Injectable } from '@angular/core';\nimport { CriteriaDropdown } from '../Util/criteria-dropdown';\nimport { CriteriaBase, option } from '../Util/criteria-base';\nimport { Observable, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { referentialModel } from '../models/Referential.Model';\nimport { criteriaModel, paramValue } from '../models/criteria.model';\nimport { CriteriaDate } from '../Util/criteria-date';\nimport { HttpHelperService } from './http-helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CriteriaService {\n\n\n  saveSearchCriterias(params: paramValue[]) : Observable<boolean> {\n    return this.httpHelper.post('/criteria/saveValues', params);\n  }\n\n  constructor(private httpHelper: HttpHelperService) { }\n\n\n  getCriteriaReferentials(): Observable<referentialModel[]> {\n    return this.httpHelper.get('/referential');\n  }\n\n  updateCriterias(criterias: criteriaModel[]): Observable<boolean> {\n    return this.httpHelper.put('/criteria/bulkupdate', criterias);\n  }\n\n   // TODO: get from a remote source of question metadata\n   getCriterias(actualCriterias: criteriaModel[]) {\n    const crits:CriteriaBase<string>[] = [];\n\n    actualCriterias.forEach((criteria,  index) => {\n      switch(criteria.controlType){\n        case 1: \n        crits.push(new CriteriaDate({\n          key:criteria.name,\n          label:criteria.label,\n          required:criteria.required,\n          order: index,\n          value: criteria.defaultValue,\n          id: criteria.id\n        }));\n        break;\n        case 3:\n          crits.push(new CriteriaDropdown({\n            key:criteria.name,\n            label:criteria.label,\n            required:criteria.required,\n            order: index,\n            value: criteria.defaultValue,\n            referential: criteria.referential,\n            options: criteria.options,\n            multiple: criteria.multiple,\n            id: criteria.id\n          }));\n        break;\n      }\n      \n    });\n\n    //CriteriaBase<string>\n    // const criterias: CriteriaBase<string>[] = [\n\n    //   new CriteriaDropdown({\n    //     key: 'brave',\n    //     label: 'Bravery Rating',\n    //     options: [\n    //       {key: 'solid',  value: 'Solid'},\n    //       {key: 'great',  value: 'Great'},\n    //       {key: 'good',   value: 'Good'},\n    //       {key: 'unproven', value: 'Unproven'}\n    //     ],\n    //     order: 3\n    //   }),\n\n    //   new CriteriaTextbox({\n    //     key: 'firstName',\n    //     label: 'First name',\n    //     value: 'Bombasto',\n    //     required: true,\n    //     order: 1\n    //   }),\n    // ];\n\n    return crits.sort((a, b) => a.order - b.order);\n  }\n}\n", "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { loginModel } from 'src/app/shared/models/auth.model';\nimport { AuthService } from 'src/app/shared/Services/auth.service';\nimport { saveToStorage } from 'src/app/shared/Util/storage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  error: string;\n  form: FormGroup;\n  logins: loginModel;\n  constructor(private authS: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      login: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  submit(){\n    if(this.form.valid){\n      this.logins = {password: this.form.controls['password'].value, login: this.form.controls['login'].value}\n      this.authS.authenticate(this.logins).subscribe((result:any) => {\n        if(result == true){\n          this.router.navigate(['/reports']);\n        } else {\n          this.error = result.error.error;\n        }\n\n      });\n    }\n  }\n  ngAfterViewInit() {\n\n  }\n}\n", "<div class=\"body\">\n\t\t<div class=\"grad\">\n\t\t<div class=\"header\">\n\t\t\t<div>Groupe<span> CAT</span></div>\n\t\t</div>\n\t\t<br>\n\t\t<div class=\"login\">\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit();\">\n      <div fxLayout=\"column wrap\" fxLauoutAlign='space-between center' fxLayoutGap='10px'>\n        <input type=\"text\" formControlName=\"login\" placeholder=\"login\" name=\"user\" style=\"width:100%\" required>\n        <input type=\"password\" formControlName=\"password\" placeholder=\"password\" name=\"password\"  style=\"width:100%\" required>\n        <div align=\"end\"><button type=\"submit\"mat-flat-button style=\"width:100%\">Login</button></div>\n        <div class=\"error\">{{error}}</div>\n        <div style=\"text-align:right; color:aliceblue\">\n          <a mat-button [routerLink]=\"['/initpass']\" target=\"_self\">Forgot password ?</a>\n        </div>\n      </div>\n    </form>\n    </div>\n  </div>\n</div>\n", "import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable()\r\nexport class ErrorAlerter implements ErrorHandler {\r\nconstructor(private _snackBar: MatSnackBar){\r\n\r\n}\r\n  handleError(error) {\r\n    this._snackBar.open(error.message, '', { duration: 6000, panelClass: ['alert-red'] });\r\n  }\r\n}", "import { HttpClient} from '@angular/common/http';\nimport {  Component, ElementRef, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { Router, UrlSerializer } from '@angular/router';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { SimpleChanges } from '@angular/core';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { reportModel } from '../models/report.model';\n\n\n\n@Component({\n  selector: 'app-report-viewer',\n  templateUrl: './report-viewer.component.html',\n  styleUrls: ['./report-viewer.component.scss']\n})\nexport class ReportViewerComponent implements OnInit, OnChanges {\n  content: any;\n  @Input() reportserver: string;\n  @Input() reporturl: string;\n  @Input() width: string;\n  @Input() height: string;\n  @Input() parameters: any;\n  @Input() report: reportModel;\n  @Input() language: string;\n  url:SafeResourceUrl;\n  @ViewChild('form') formy: ElementRef;\n  config = { attributes: true, childList: true, subtree: true };\n\n\n  constructor( private router: Router\n    , private _httpClient: HttpClient\n    , private serializer: UrlSerializer\n    , private dom:DomSanitizer\n    , private ngxService: NgxUiLoaderService) { }\n\n\n  ngOnInit(): void {\n  }\n\n  refresh = () => {\n    this.formy.nativeElement.submit();\n    this.ngxService.start();\n    this.parameters;\n  }\n\n  observer = new MutationObserver(this.refresh);\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.url = `${this.reportserver}/Pages/ReportViewer.aspx?${this.reporturl}`;\n    if(this.formy)\n    this.observer.observe(this.formy.nativeElement, this.config);\n  }\n\n  loaded = () => {\n    this.ngxService.stop();\n  }\n\n  ngOnDestroy() {\n    if(this.observer) { \n        this.observer.disconnect(); \n        this.observer = undefined;\n    }\n  }\n  \n}\n", "<!-- <iframe #reportingviewer (load)=\"loaded();\"\n  scrolling=\"no\" class=\"report-viewer\" frameborder=\"0\"\n[src]=\"url\"></iframe> -->\n\n<form ngNoForm #form\n [action]=\"url\"\n method=\"POST\"\n target=\"frame\">\n<INPUT type=\"hidden\" name=\"rs:Command\" value=\"Render\">   \n  <INPUT type=\"hidden\" name=\"rc:LinkTarget\" value=\"main\">    \n  <INPUT type=\"hidden\" name=\"rs:Format\" value=\"HTML5.0\">  \n  <input type=\"hidden\"  name=\"rc:Parameters\" value=\"false\" />\n  <INPUT type=\"hidden\" *ngFor=\"let param of parameters\" [name]=\"param.key\" [value]=\"param.value\">\n</form>\n\n<iframe #reportingviewer (load)=\"loaded();\" name=\"frame\" class=\"report-viewer\" \n frameborder=\"0\" scrolling=\"no\" [style.height]=\"height\"></iframe>", "import { RouterModule } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettingRoutingModule } from './setting-routing.module';\nimport { ReportConfigurationComponent } from './report-configuration/report-configuration.component';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgxUiLoaderRouterModule } from 'ngx-ui-loader';\nimport { GlobalSettingComponent } from './global-setting/global-setting.component';\nimport { CategoryConfigurationComponent } from './category-configuration/category-configuration.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ReportConfigurationComponent, GlobalSettingComponent, CategoryConfigurationComponent],\n  imports: [\n    RouterModule,\n    CommonModule,\n    SettingRoutingModule,\n    MatCardModule,\n    MatSlideToggleModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatGridListModule,\n    SharedModule,\n    MatTabsModule,\n    MatToolbarModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SettingModule { }\n", "import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'momentPipe'\n})\nexport class MomentPipe implements PipeTransform {\n\n\n  transform(value: string, dateFormat: string): any {\n    return moment(value).format(dateFormat);\n  }\n\n}\n", "/**\r\n * saves the key, value to storage\r\n * default persistence is false\r\n */\r\nexport function saveToStorage(key: string, value: any, persist: boolean = false): void {\r\n    const jsonData = JSON.stringify(value);\r\n    sessionStorage.setItem(key, jsonData);\r\n    if (persist) {\r\n      localStorage.setItem(key, jsonData);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * gets the key, value from storage\r\n   */\r\n  export function getFromStorage(key: string): any {\r\n    let value = sessionStorage.getItem(key);\r\n    if (!value) {\r\n      value = localStorage.getItem(key);\r\n    }\r\n    return value !== 'undefined' ? JSON.parse(value) : null;\r\n  }\r\n  \r\n  /**\r\n   * removes the key, value from storage\r\n   */\r\n  export function removeFromStorage(key: string): void {\r\n    sessionStorage.removeItem(key);\r\n    localStorage.removeItem(key);\r\n  }", "import { CriteriaBase, option } from './criteria-base';\r\n\r\nexport class CriteriaDropdown extends CriteriaBase<string> {\r\n  controlType = 'dropdown';\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/Services/auth.service';\n\n@Component({\n  selector: 'app-init-pass',\n  templateUrl: './init-pass.component.html',\n  styleUrls: ['./init-pass.component.scss']\n})\nexport class InitPassComponent implements OnInit {\nerror: string;\ntoken: string;\nformInit: FormGroup;\nformSend: FormGroup;\n\nconstructor(private authS: AuthService, private router: Router, private route: ActivatedRoute) {\n  this.token = this.route.snapshot.paramMap.get('code');\n }\n\nngOnInit(): void {\n  this.formInit = new FormGroup({\n    password: new FormControl('', Validators.required)\n  });\n\n  this.formSend = new FormGroup({\n    email: new FormControl('', Validators.required)\n  });\n}\n\n  submitSend(){\n    if(this.formSend.valid){\n\n      this.authS.sendInitPass({mail:this.formSend.controls['email'].value}).subscribe((result:any) => {\n        if(result) {\n          this.router.navigate(['/login']);\n        } else this.error = \"This email is not registered\";\n      });\n    }\n  }\n\n  submitInit(){\n    if(this.formInit.valid){\n      this.authS.initPass({'password':this.formInit.controls['password'].value, 'token':this.token}).subscribe((result:any) => {\n        if(result) {\n          this.router.navigate(['/login']);\n        } else this.error = \"Error occurend\";\n      });\n    }\n  }\n\n}\n", "<div class=\"body\">\n    <div class=\"grad\">\n    <div class=\"header\">\n        <div>Groupe<span> CAT</span></div>\n    </div>\n    <br>\n    <div class=\"login\">\n  <form  *ngIf=\"!token\" [formGroup]=\"formSend\" (ngSubmit)=\"submitSend();\">\n  <div fxLayout=\"column wrap\" fxLauoutAlign='space-between center' fxLayoutGap='10px'>\n    <input type=\"email\" formControlName=\"email\"  placeholder=\"email\" name=\"email\" style=\"width:100%\" required>\n    <div align=\"end\"><button type=\"submit\"mat-flat-button style=\"width:100%\">Send initialisation link</button></div>\n    <div class=\"error\">{{error}}</div>\n  </div>\n</form>\n<form  *ngIf=\"token\" [formGroup]=\"formInit\" (ngSubmit)=\"submitInit();\">\n  <div *ngIf=\"token\"  fxLayout=\"column wrap\" fxLauoutAlign='space-between center' fxLayoutGap='10px'>\n    <input type=\"password\" formControlName=\"password\" placeholder=\"new password\" name=\"user\" style=\"width:100%\">\n    <div align=\"end\"><button type=\"submit\"mat-flat-button style=\"width:100%\">Init password</button></div>\n  </div>\n</form>\n</div>\n</div>\n</div>\n", "import { Page404Component } from './shared/page404/page404.component';\nimport { SettingLayoutComponent } from './shared/setting-layout/setting-layout.component';\nimport { LayoutComponent } from './shared/layout/layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReportGuard } from './shared/guards/report.guard';\n\nconst routes: Routes = [\n  {\n    path:'',\n    canActivate: [ReportGuard],\n    children: [\n      {path: '', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)}\n    ]\n  },\n  {\n    path:'',\n    canActivate: [ReportGuard],\n    canActivateChild: [ReportGuard],\n    component: LayoutComponent,\n    children:[\n      { path:'', loadChildren: () => import('./reporting/reporting.module').then(m => m.ReportingModule)}\n    ]\n  },\n  {\n    path:'',\n    component: SettingLayoutComponent,\n    canActivate: [ReportGuard],\n    canActivateChild: [ReportGuard],\n    children:[\n      { path:'', loadChildren:() => import('./setting/setting.module').then(m => m.SettingModule)}\n    ]\n  },\n  { path:'**', component:LayoutComponent, children: [{ path:'**', component: Page404Component }] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n", "import { categoryModel } from './../../shared/models/report.model';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { merge, of } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { reportModel } from 'src/app/shared/models/report.model';\nimport { ReportService } from 'src/app/shared/Services/report.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { getFromStorage } from 'src/app/shared/Util/storage';\n\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'label', 'category', 'scheduled', 'updatedOn', 'status'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  isLoadingResults: boolean;\n  isRateLimitReached: boolean;\n  resultsLength: any;\n  data: MatTableDataSource<reportModel>;\n  categories: categoryModel[];\n  user = getFromStorage('user');\n  \n  constructor(private rs: ReportService, private _snackBar: MatSnackBar) {\n    rs.getCategories().subscribe(data => {\n      this.categories = data;\n    });\n\n   }\n\n  ngAfterViewInit() {\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.rs!.getReports();\n        }),\n        map(data => {\n          // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          this.resultsLength = data.length;\n          return data;\n        }),\n        catchError((error) => {\n          this.isLoadingResults = false;\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          this.isRateLimitReached = true;\n          this._snackBar.open(error.error, '', { duration: 6000, panelClass: ['alert-red'] });\n          return of([]);\n        })\n      ).subscribe(data => {\n        this.data = new MatTableDataSource(data);\n        this.data.paginator = this.paginator;\n        this.data.sort = this.sort;\n        this.data.filterPredicate = (el: reportModel, filter: string) => {\n          return el.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0 || el.category?.id == filter;\n         };\n      });\n      \n  }\n\n  ngOnInit() {\n\n  }\n\n  ID: string;\n  disabled = true;\n  target: string = \"\";\n  targetConfig: string = \"\";\n\nhighlight(row){\n    this.ID = row.id;\n    this.disabled = this.ID == '';\n    this.target = \"/report/\" + this.ID;\n    this.targetConfig = \"/ReportConfiguration/\" + this.ID;\n}\n\nsearch(event: Event) {\n  var value:string = (event.target as HTMLInputElement)?.value;\n  if(value == undefined) value = (event as unknown as MatSelectChange).value; \n  if(value == undefined) return;\n\n  const filterValue = value;\n  this.data.filter = filterValue.trim().toLowerCase();\n\n  if (this.data.paginator) {\n    this.data.paginator.firstPage();\n  }\n}\n\n}\n", "<div fxLayout=\"row\"  fxLayoutGap='15px'>\n  <mat-form-field *ngIf=\"categories\" appearance=\"legacy\"  [style.width.px]=\"150\">\n    <mat-label>Category</mat-label>\n    <mat-select #Category (selectionChange)=\"search($event)\"> \n      <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\">{{category.name}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field appearance=\"legacy\" [style.width.px]=\"400\">\n    <mat-label>Report name</mat-label>\n    <input matInput placeholder=\"Enter report name\" (keyup)=\"search($event);\">\n    <mat-icon style=\"cursor:pointer\" (click)=\"search($event);\" matSuffix>search</mat-icon>\n  </mat-form-field>\n\n  </div>\n  \n  <mat-card class=\"reports\">\n    <mat-card-header class=\"reportcard-header\">\n      <mat-toolbar class=\"reportviewer-header\">\n        <span>\n          Reports\n        </span>\n        <span class=\"example-spacer\"></span>\n        <div align=\"end\">\n          <div fxLayout=\"row\"  fxLayoutGap='15px'>\n            <button type=\"button\" mat-flat-button type=\"button\" \n            [routerLink]=\"[target]\" [disabled]=\"disabled\">Open</button>\n            <button type=\"button\" *ngIf=\"user && user.isAdmin\" mat-flat-button type=\"button\" \n            [routerLink]=\"[targetConfig]\" [disabled]=\"disabled\">Configure</button>\n            </div>\n        </div> \n    </mat-toolbar>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"mat-elevation-z8\">\n      <table mat-table \n      mat-table [dataSource]=\"data\" class=\"example-table\"\n       matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n      \n        <!-- Position Column -->\n        <!-- <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef> No </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n        </ng-container> -->\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"label\">\n          <th mat-header-cell *matHeaderCellDef> Label </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"updatedOn\">\n          <th mat-header-cell *matHeaderCellDef> Updated On </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.updatedOn | momentPipe: 'dddd D MMM YYYY' }} </td>\n        </ng-container>\n        \n        <!-- <ng-container matColumnDef=\"ID\">\n          <th mat-header-cell *matHeaderCellDef>id</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container> -->\n\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef> Status </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.status | reportStatusPipe }} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"category\">\n          <th mat-header-cell *matHeaderCellDef> Category </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.category.name}} </td>\n        </ng-container>\n      \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"scheduled\">\n          <th mat-header-cell *matHeaderCellDef> Scheduled </th>\n          <td mat-cell *matCellDef=\"let element\">  {{ element.scheduled | booleanPipe }}  </td>\n        </ng-container>\n      \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'highlight': ID == row.id}\"\n        (click)=\"highlight(row)\"></tr>\n      </table>\n      <mat-paginator showFirstLastButtons [pageSize]=\"7\"></mat-paginator>\n    </div>\n    </mat-card-content>\n  </mat-card>\n", "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n", "function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";" ],
  "sourceRoot": "webpack:///"
}